package zhou.wu.mytest.thread.synchronize.biased;

import lombok.extern.slf4j.Slf4j;
import org.openjdk.jol.info.ClassLayout;

import java.util.Vector;

/**
 * -XX:BiasedLockingStartupDelay=0 禁用偏向锁延迟
 * 如果对象虽然被多个线程访问，但没有竞争，这时偏向了线程 T1 的对象仍有机会重新偏向 T2，重偏向会重置对象的 Thread ID
 * 当撤销偏向锁阈值超过 20 次后，jvm 会这样觉得，我是不是偏向错了呢，于是会在给这些对象加锁时重新偏向至加锁线程。
 * 理解代码逻辑，注意看结果批注。
 * @author zhou.wu
 * @description: 批量重偏向（会让MarkWord的ThreadId重新设置）
 * @date 2022/8/8
 **/
@Slf4j
public class BatchRebias {

    public static void main(String[] args) throws InterruptedException {
        test3();
    }

    private static void test3() throws InterruptedException {
        Vector<Dog> list = new Vector<>();  // 多个Dog对象集合
        Thread t1 = new Thread(() -> {
            for (int i = 0; i < 30; i++) {
                Dog d = new Dog();
                list.add(d);
                synchronized (d) {  // 先都偏向t1
                    log.debug(i + "\t" + ClassLayout.parseInstance(d).toPrintable());
                }
            }
            synchronized (list) {
                list.notify();
            }
        }, "t1");
        t1.start();

        Thread t2 = new Thread(() -> {
            synchronized (list) {
                try {
                    list.wait(); // 需要先等待
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            log.debug("===============> ");
            for (int i = 0; i < 30; i++) {
                Dog d = list.get(i);
                log.debug(i + "\t" + ClassLayout.parseInstance(d).toPrintable());
                synchronized (d) {  // t2对list中的Dog对象进行加锁
                    log.debug(i + "\t" + ClassLayout.parseInstance(d).toPrintable());
                }
                log.debug(i + "\t" + ClassLayout.parseInstance(d).toPrintable());
            }
        }, "t2");
        t2.start();
    }
}
/**
 * 简化结果：
 * // 给30个对象加偏向锁
 * [t1] - 0 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 1 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 2 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 3 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 4 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 5 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 6 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 7 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 8 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 9 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 10 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 11 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 12 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 13 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 14 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 15 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 16 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 17 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 18 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 19 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 20 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 21 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 22 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 23 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 24 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 25 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 26 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 27 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 28 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t1] - 29 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - ===============>
 * [t2] - 0 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101 // t2还没对其加锁的时候
 * [t2] - 0 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000 // 撤销加锁
 * [t2] - 0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001 // 无锁（不可偏向）
 * [t2] - 1 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 1 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 1 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 2 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 2 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 3 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 3 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 3 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 4 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 4 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 4 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 5 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 5 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 5 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 6 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 6 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 6 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 7 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 7 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 7 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 8 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 8 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 8 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 9 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 9 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 9 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 10 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 10 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 10 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 11 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 11 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 11 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 12 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 12 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 12 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 13 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 13 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 13 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 14 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 14 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 14 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 15 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 15 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 15 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 16 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 16 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 16 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 17 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 17 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 17 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * [t2] - 18 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 18 00000000 00000000 00000000 00000000 00100000 01011000 11110111 00000000
 * [t2] - 18 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000001
 * // 为了t2撤销偏向超过阈值20
 * [t2] - 19 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 19 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101    // 不撤销，偏向t2（撤销性能耗费相对较大）
 * [t2] - 19 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101    // 保持着t2的重偏向
 * // 这个重偏向也不会只针对单个，例如本例的19，查看后面的20~29，发现后面批量的对象都偏向于t2了
 * [t2] - 20 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 20 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 20 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 21 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 21 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 21 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 22 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 22 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 22 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 23 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 23 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 23 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 24 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 24 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 24 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 25 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 25 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 25 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 26 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 26 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 26 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 27 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 27 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 27 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 28 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 28 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 28 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 29 00000000 00000000 00000000 00000000 00011111 11110011 11100000 00000101
 * [t2] - 29 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * [t2] - 29 00000000 00000000 00000000 00000000 00011111 11110011 11110001 00000101
 * */
